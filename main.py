import telebot
from extensions import APIException, Convertor
from config import TOKEN, exchanges
import traceback


bot = telebot.TeleBot(TOKEN)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message: telebot.types.Message):
    bot.send_message(message.chat.id,
                     '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç.\n' +
                     '–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç –Ω–∞–∂–º–∏—Ç–µ /values.\n' +
                     '–î–ª—è –ø–æ–º–æ—â–∏ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º –Ω–∞–∂–º–∏—Ç–µ /help.')


@bot.message_handler(commands=['help'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /help
def help_command(message: telebot.types.Message):
    text = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã - –≤–≤–µ–¥–∏—Ç–µ /values\n" \
           "–ß—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–¥–Ω—É –≤–∞–ª—é—Ç—É –≤ –¥—Ä—É–≥—É—é\n" \
           "–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n" \
           "[–∫–ª—é—á –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã] [–∫–ª—é—á –∫–æ–Ω–µ—á–Ω–æ–π –≤–∞–ª—é—Ç—ã] [—Å—É–º–º–∞]\n" \
           "–í—Å–µ–≥–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 3 —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞\n" \
           "–±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –∏ —Å–∫–æ–±–æ–∫.\n" \
           "–ù–∞–ø—Ä–∏–º–µ—Ä:\n" \
           "–µ–≤—Ä–æ —Ä—É–±–ª—å 100"
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['values'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /values
def values(message: telebot.types.Message):
    text = 'üîÑ –í–∞–ª—é—Ç—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏ –∏—Ö –∫–ª—é—á–∏:\n' \
           '[–í–∞–ª—é—Ç–∞]    ‚û°    [–ö–ª—é—á]'
    for key, lst in exchanges.items():
        text += f'\n{lst}              ‚û°    {key}'
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text'])  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç
def converter(message: telebot.types.Message):  # –ø—Ä–∏–Ω–∏–º–∞–µ–º –∏ —Ä–∞–∑–±–∏—Ä–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞
    values = message.text.split(' ')
    try:
        if len(values) != 3:
            raise APIException('–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–æ–±–µ–ª!')
        answer = Convertor.get_price(*values)
    except APIException as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ:\n{e}")
    except Exception as e:
        traceback.print_tb(e.__traceback__)
        bot.reply_to(message, f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:\n{e}")
    else:
        bot.reply_to(message, answer)


if __name__ == '__main__':  # —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
    bot.infinity_polling()
